var _ = require('underscore');
var assert = require('assert');
var fs = require('fs');
var temp = require('temp');
var url = require('url');
var util = require('util');

describe('Loodle', function () {

    // Rest context that can be used every time we need to make a request as an anonymous user
    var anonymousRestContext = null;
    // Rest contexts that can be used every time we need to make a request as a tenant admin
    var camAdminRestContext = null;
    var gtAdminRestContext = null;
    // Rest context that can be used every time we need to make a request as a global admin
    var globalAdminRestContext = null;

    before(function () {
        return;
    });

    after(function () {
        return;
    });

    describe('getUser', function () {
        it('should get the user information from the loodle application');
    });

    describe('create', function () {
        it('should create a mirror account in the loodle application for the user if he/she does not have one yet');
        it('should create a loodle in the loodle application');
        it('should save in db the matching contentId - loodleId');
        it('should add the optional additional members to the loodle');
    });

    describe('getData', function () {
       it('should get the loodle data');
    });

    describe('delete', function () {
        it('should delete the loodle application');
    });

    describe('updateMembers', function () {
        it('should update the specified members');
        it('should create a mirror account in the loodle application for the specified users if they do no have one yet');
        it('should remove the user if this was the specified update');
        it('should associate the user to the loodle if that was the specified update');
    });

    describe('addSchedule', function () {
        it('should add the schedule to the loodle');
    });

    describe('deleteSchedule', function () {
        it('should delete the schedule from the loodle');
    });

    describe('updateVotes', function () {
        it('should update the specified votes');
    });

    describe('emitUpdateScheduleNotification', function () {
        it('should emit a notification about the updated schedules');
    })

    describe('emitUpdateVoteNotification', function () {
        it('should emit a notification about the updated votes');
    });

});
