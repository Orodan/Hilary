
// Get a named logger so we can post messages in the log
var log = require('oae-logger').logger('oae-doodle-rest');

// Import the core OAE utility that contains the Express servers on which we can bind routes
var OAE = require('oae-util/lib/oae');

// Import the API component to get the task create and listing functionality
var DoodleAPI = require('./api');

var async = require('async');

OAE.tenantRouter.on('post', '/api/doodle/:contentId/schedule', function (req, res) {
    DoodleAPI.addSchedule(req.ctx, req.params.contentId, req.body, function (err) {
        res.end(err);
    });
});

OAE.tenantRouter.on('put', '/api/doodle/:loodleId/votes', function (req, res) {
	DoodleAPI.updateVotes(req.ctx, req.body, req.params.loodleId, function (err) {
		res.end(err);
	});
});

OAE.tenantRouter.on('delete', '/api/doodle/:loodleId/schedule/:scheduleId', function (req, res) {
	DoodleAPI.deleteSchedule(req.ctx, req.params.loodleId, req.params.scheduleId, function (err) {
		res.end(err);
	});
});

OAE.tenantRouter.on('post', '/api/doodle/:contentId/notifications', function (req, res) {
	if (req.body.notificationType === 'schedule') {
		DoodleAPI.emitUpdateScheduleNotification(req.ctx, req.params.contentId, function (err) {
			res.end(err);
		});
	}
	else if (req.body.notificationType === 'vote') {
		DoodleAPI.emitUpdateVoteNotification(req.ctx, req.params.contentId, function (err) {
			res.end(err);
		});
	}
	else {
		res.end();
	}
});

OAE.tenantRouter.on('get', '/api/doodle/:loodleId', function (req, res) {
	DoodleAPI.getData(req.ctx, req.params.loodleId, function (err, data) {
		if (err)
			res.end(err);
		else
			res.json(data);
	});
});
